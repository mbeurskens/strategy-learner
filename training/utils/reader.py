"""
reader.py
Read binary data generated by strategy learner.

author:   		Mickey Beurskens <mickey_beurskens@hotmail.com>
created:     	2020-April-16
"""

import shutil
import glob
import os

from ctypes import sizeof
from copy import deepcopy
from .structs import ModelTrainingData


class DataReader:
    """ Import and save data from the strategy learner. """

    @staticmethod
    def read_data(file_name):
        """
        Read binary data from a strategy learner model data file.

        :param file_name: Name of the data file.
        :return:
        """
        data = []
        struct = ModelTrainingData()
        corrupt_data_count = 0
        with open(file_name, "rb") as file:
            while file.readinto(struct) == sizeof(struct):
                data.append(deepcopy(struct))
        return data

    @staticmethod
    def get_cur_data_files(source_dir, destination_dir):
        """
        Copy current data files to data folder using relative paths.

        :param source_dir: Directory to pull data files from.
        :param destination_dir: Destination directory to copy data to.
        """
        print("Copying current turtle model data to destination directory")
        try:
            dir_path = os.path.dirname(os.path.realpath(__file__))
            data_path = os.path.realpath(dir_path + "/" + source_dir)
            file = []
            for file in glob.glob(data_path + "/model_data*"):
                shutil.copy(file, destination_dir)
                print('\tCopied: ' + file)
            if not file:
                print('\tNo file names found matching format')
        except ImportError:
            print("Could not copy files")
            raise


if __name__ == "__main__":
    data_handler = DataReader()
    data = data_handler.read_data("../../experiments/vpg_included_data/training_data/model_data_t2_1600419386.mb")
    print("Number of samples loaded: " + str(len(data)))
